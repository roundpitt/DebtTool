{
  "_args": [
    [
      {
        "raw": "envvar@1.1.x",
        "scope": null,
        "escapedName": "envvar",
        "name": "envvar",
        "rawSpec": "1.1.x",
        "spec": ">=1.1.0 <1.2.0",
        "type": "range"
      },
      "C:\\Users\\pl66553\\Documents\\ZombieFest"
    ]
  ],
  "_from": "envvar@>=1.1.0 <1.2.0",
  "_id": "envvar@1.1.0",
  "_inCache": true,
  "_location": "/envvar",
  "_nodeVersion": "4.4.0",
  "_npmOperationalInternal": {
    "host": "packages-13-west.internal.npmjs.com",
    "tmp": "tmp/envvar-1.1.0.tgz_1457734360173_0.4004756703507155"
  },
  "_npmUser": {
    "name": "davidchambers",
    "email": "dc@davidchambers.me"
  },
  "_npmVersion": "2.14.21",
  "_phantomChildren": {},
  "_requested": {
    "raw": "envvar@1.1.x",
    "scope": null,
    "escapedName": "envvar",
    "name": "envvar",
    "rawSpec": "1.1.x",
    "spec": ">=1.1.0 <1.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/envvar/-/envvar-1.1.0.tgz",
  "_shasum": "c25a0866edae87046d976c8db037489551639b94",
  "_shrinkwrap": null,
  "_spec": "envvar@1.1.x",
  "_where": "C:\\Users\\pl66553\\Documents\\ZombieFest",
  "bugs": {
    "url": "https://github.com/plaid/envvar/issues"
  },
  "dependencies": {},
  "description": "Derive JavaScript values from environment variables",
  "devDependencies": {
    "istanbul": "0.4.x",
    "jshint": "2.9.x",
    "mocha": "2.x.x",
    "xyz": "0.5.x"
  },
  "directories": {},
  "dist": {
    "shasum": "c25a0866edae87046d976c8db037489551639b94",
    "tarball": "https://registry.npmjs.org/envvar/-/envvar-1.1.0.tgz"
  },
  "files": [
    "/README.md",
    "/index.js",
    "/package.json"
  ],
  "gitHead": "fe69f87521ae8a9deff89c7b41c3e47ccbf6293f",
  "homepage": "https://github.com/plaid/envvar#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "davidchambers",
      "email": "dc@davidchambers.me"
    }
  ],
  "name": "envvar",
  "optionalDependencies": {},
  "readme": "# envvar\n\nenvvar is a tiny JavaScript package for deriving JavaScript values from\nenvironment variables.\n\n```javascript\nconst envvar = require('envvar');\n\nconst GITHUB_API_TOKEN = envvar.string('GITHUB_API_TOKEN');\nconst HTTP_MAX_SOCKETS = envvar.number('HTTP_MAX_SOCKETS');\nconst ENABLE_FEATURE_X = envvar.boolean('ENABLE_FEATURE_X', false);\n```\n\nIf one argument is provided the environment variable is __required__. If the\nenvironment variable is not set, an `envvar.UnsetVariableError` is thrown:\n\n    UnsetVariableError: No environment variable named \"GITHUB_API_TOKEN\"\n\nIf two arguments are provided the environment variable is __optional__. If the\nenvironment variable is not set, the default value is used. The default value\nmust be of type Boolean in the case of `envvar.boolean`, of type Number in the\ncase of `envvar.number`, or of type String in the case of `envvar.string`. If\nit is not, a `TypeError` is thrown.\n\nThe value of the environment variable must be the string representation of a\nvalue of the appropriate type: for `envvar.boolean` the only valid strings are\n`'true'` and `'false'`; for `envvar.number` applying `Number` to the string\nmust not produce `NaN`. If the environment variable is set but does not have\na suitable value, an `envvar.ValueError` is thrown:\n\n    ValueError: Value of process.env[\"HTTP_MAX_SOCKETS\"] does not represent a number\n\n### `envvar.enum`\n\nThis is similar to `envvar.string`, but with constraints. There may be a small\nnumber of valid values for a given environment variable. For example:\n\n```javascript\nconst NODE_ENV = envvar.enum('NODE_ENV', ['development', 'staging', 'production']);\n```\n\nThis states that `process.env.NODE_ENV` must be set to `development`,\n`staging`, or `production`.\n\nA default value may be provided:\n\n```javascript\nconst NODE_ENV = envvar.enum('NODE_ENV', ['development', 'staging', 'production'], 'production');\n```\n\nThis states that `process.env.NODE_ENV` must either be unset (in which case the\ndefault value is assumed), or set to `development`, `staging`, or `production`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/plaid/envvar.git"
  },
  "scripts": {},
  "version": "1.1.0"
}
